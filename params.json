{"tagline":"Open source MAC Telnet client and server for connecting to Microtik RouterOS routers and Linux machines via MAC address.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration.","body":"MAC-Telnet for Linux\r\n====================\r\n\r\nConsole tools for connecting to, and serving, devices using MikroTik RouterOS MAC-Telnet protocol.\r\n\r\nInstallation\r\n------------\r\n\r\nThen download source tarball, extract, compile and install:\r\n\r\n    wget http://github.com/haakonnessjoen/MAC-Telnet/tarball/master\r\n    tar zxvf haakonness*.tar.gz\r\n    cd haakonness*/\r\n    make all install\r\n\r\nNow you're ready.\r\n\r\nTIP: You can use the well known \"expect\" tool to automate/script dialogues via mactelnet!\r\n\r\nUsage\r\n-----\r\n\r\n    # mactelnet -h\r\n    Usage: mactelnet <MAC|identity> [-h] [-n] [-t <timeout>] [-u <user>] [-p <password>] [-U <user>] | -l\r\n    \r\n    Parameters:\r\n      MAC            MAC-Address of the RouterOS/mactelnetd device. Use mndp to\r\n                     discover it.\r\n      identity       The identity/name of your destination device. Uses\r\n                     MNDP protocol to find it.\r\n      -l             List/Search for routers nearby. (using MNDP)\r\n      -n             Do not use broadcast packets. Less insecure but requires\r\n                     root privileges.\r\n      -t <timeout>   Amount of seconds to wait for a response on each interface.\r\n      -u <user>      Specify username on command line.\r\n      -p <password>  Specify password on command line.\r\n      -U <user>      Drop privileges to this user. Used in conjunction with -n\r\n                     for security.\r\n      -q             Quiet mode.\r\n      -h             This help.\r\n\r\nExample:\r\n\r\n    $ mactelnet 0:c:42:43:58:a5 -u admin\r\n    Password: \r\n    Connecting to 0:c:42:43:58:a5...done\r\n    \r\n    \r\n      MMM      MMM       KKK                          TTTTTTTTTTT      KKK\r\n      MMMM    MMMM       KKK                          TTTTTTTTTTT      KKK\r\n      MMM MMMM MMM  III  KKK  KKK  RRRRRR     OOOOOO      TTT     III  KKK  KKK\r\n      MMM  MM  MMM  III  KKKKK     RRR  RRR  OOO  OOO     TTT     III  KKKKK\r\n      MMM      MMM  III  KKK KKK   RRRRRR    OOO  OOO     TTT     III  KKK KKK\r\n      MMM      MMM  III  KKK  KKK  RRR  RRR   OOOOOO      TTT     III  KKK  KKK\r\n    \r\n      MikroTik RouterOS 4.0 (c) 1999-2009       http://www.mikrotik.com/\r\n     \r\n     \r\n     [admin@HMG] >\r\n\r\nMAC-Ping usage\r\n--------------\r\n\r\n    # macping -h\r\n    Usage: macping <MAC> [-h] [-c <count>] [-s <packet size>]\r\n    \r\n    Parameters:\r\n      MAC       MAC-Address of the RouterOS/mactelnetd device.\r\n      -s        Specify size of ping packet.\r\n      -c        Number of packets to send. (0 = for ever)\r\n      -h        This help.\r\n\r\nExample:\r\n\r\n    # macping 0:c:42:43:58:a5\r\n    0:c:42:43:58:a5 56 byte, ping time 1.17 ms\r\n    0:c:42:43:58:a5 56 byte, ping time 1.07 ms\r\n    0:c:42:43:58:a5 56 byte, ping time 1.20 ms\r\n    0:c:42:43:58:a5 56 byte, ping time 0.65 ms\r\n    0:c:42:43:58:a5 56 byte, ping time 1.19 ms\r\n    \r\n    5 packets transmitted, 5 packets received, 0% packet loss\r\n    round-trip min/avg/max = 0.65/1.06/1.20 ms\r\n\r\nOr for use in bash-scripting:\r\n\r\n    # macping 0:c:42:43:58:a5 -c 2 >/dev/null 2>&1 || ( echo \"No answer for 2 pings\" | mail -s \"router down\" my.email@address.com )\r\n","name":"Mac-telnet"}